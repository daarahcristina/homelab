#!/bin/bash

# ==============================================================================
# Script de Automa√ß√£o para Setup de Homelab com Docker e Twingate
# Este script ir√° configurar Nextcloud, Jellyfin, Uptime Kuma e Twingate.
# ==============================================================================

# --- Fun√ß√µes de Cor para Melhor Visualiza√ß√£o ---
C_OFF='\033[0m'
C_BLUE='\033[0;34m'
C_GREEN='\033[0;32m'
C_YELLOW='\033[0;33m'
C_RED='\033[0;31m'

info() {
    echo -e "${C_BLUE}INFO:${C_OFF} $1"
}

success() {
    echo -e "${C_GREEN}SUCESSO:${C_OFF} $1"
}

warning() {
    echo -e "${C_YELLOW}AVISO:${C_OFF} $1"
}

error() {
    echo -e "${C_RED}ERRO:${C_OFF} $1" >&2
    exit 1
}

# --- Fun√ß√£o Principal ---
main() {
    clear
    echo "================================================="
    echo "    Bem-vindo ao Setup Automatizado de Homelab   "
    echo "================================================="
    echo

    check_dependencies
    setup_variables
    create_directories
    create_docker_compose
    create_homepage_config
    start_services
    final_summary
}

# --- Verifica√ß√£o de Depend√™ncias ---
check_dependencies() {
    info "Verificando se Docker e Docker Compose est√£o instalados..."
    if ! command -v docker &> /dev/null; then
        error "Docker n√£o encontrado. Por favor, instale o Docker antes de continuar."
    fi
    if ! command -v docker-compose &> /dev/null; then
        error "Docker Compose n√£o encontrado. Por favor, instale-o antes de continuar."
    fi
    success "Depend√™ncias encontradas!"
    echo
}

# --- Coleta de Vari√°veis do Usu√°rio ---
setup_variables() {
    info "Vamos configurar as vari√°veis necess√°rias."
    
    read -p "Digite a senha que voc√™ deseja para o banco de dados do Nextcloud: " -s NEXTCLOUD_DB_PASSWORD
    echo
    if [ -z "$NEXTCLOUD_DB_PASSWORD" ]; then
        error "A senha do banco de dados n√£o pode ser vazia."
    fi
    
    warning "Agora, voc√™ precisar√° das suas credenciais do Twingate."
    warning "Acesse seu painel do Twingate, crie um Connector do tipo Docker e copie os tokens."
    
    read -p "Cole aqui o seu TWINGATE_NETWORK: " TWINGATE_NETWORK
    read -p "Cole aqui o seu TWINGATE_ACCESS_TOKEN: " TWINGATE_ACCESS_TOKEN
    read -p "Cole aqui o seu TWINGATE_REFRESH_TOKEN: " TWINGATE_REFRESH_TOKEN

    if [ -z "$TWINGATE_NETWORK" ] || [ -z "$TWINGATE_ACCESS_TOKEN" ] || [ -z "$TWINGATE_REFRESH_TOKEN" ]; then
        error "As credenciais do Twingate s√£o obrigat√≥rias."
    fi

    # Pega IDs de usu√°rio e grupo automaticamente
    PUID=$(id -u)
    PGID=$(id -g)
    
    echo
    success "Vari√°veis configuradas!"
    echo
}

# --- Cria√ß√£o da Estrutura de Diret√≥rios ---
create_directories() {
    info "Criando a estrutura de diret√≥rios em ./homelab..."
    mkdir -p homelab/{nextcloud/{data,config,db},jellyfin/{config,media},uptime-kuma/data,homepage/config}
    cd homelab || error "N√£o foi poss√≠vel entrar no diret√≥rio 'homelab'."
    success "Estrutura de diret√≥rios criada."
    echo
}

# --- Gera√ß√£o do Arquivo Docker Compose Unificado ---
create_docker_compose() {
    info "Gerando o arquivo docker-compose.yml..."
    
    cat << EOF > docker-compose.yml
version: "3.8"

networks:
  homelab-net:
    driver: bridge

services:
  # --- Nuvem Pessoal ---
  nextcloud:
    image: linuxserver/nextcloud:latest
    container_name: nextcloud
    restart: unless-stopped
    networks:
      - homelab-net
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=America/Sao_Paulo
    volumes:
      - ./nextcloud/config:/config
      - ./nextcloud/data:/data
    depends_on:
      - nextcloud-db

  nextcloud-db:
    image: postgres:15
    container_name: nextcloud-db
    restart: unless-stopped
    networks:
      - homelab-net
    volumes:
      - ./nextcloud/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_PASSWORD=${NEXTCLOUD_DB_PASSWORD}

  # --- Servidor de M√≠dia ---
  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    networks:
      - homelab-net
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=America/Sao_Paulo
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/media:/data/media

  # --- Monitoramento ---
  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    restart: unless-stopped
    networks:
      - homelab-net
    volumes:
      - ./uptime-kuma/data:/app/data
      
  # --- Acesso Remoto Seguro ---
  twingate-connector:
    image: twingate/connector:latest
    container_name: twingate-connector
    restart: unless-stopped
    networks:
      - homelab-net
    environment:
      - TWINGATE_NETWORK=${TWINGATE_NETWORK}
      - TWINGATE_ACCESS_TOKEN=${TWINGATE_ACCESS_TOKEN}
      - TWINGATE_REFRESH_TOKEN=${TWINGATE_REFRESH_TOKEN}

  # --- Painel de Controle ---
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    restart: unless-stopped
    networks:
      - homelab-net
    ports:
      - "3001:3000" # Expondo a porta 3001 para acesso local
    volumes:
      - ./homepage/config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
EOF

    success "Arquivo docker-compose.yml gerado com sucesso."
    echo
}

# --- Cria√ß√£o do Arquivo de Configura√ß√£o do Homepage ---
create_homepage_config() {
    info "Gerando arquivo de configura√ß√£o inicial para o Homepage (services.yaml)..."

    cat << EOF > ./homepage/config/services.yaml
# Lembre-se de editar as URLs depois de configurar os Recursos no Twingate!
- "Nuvem Pessoal":
    - Nextcloud:
        href: http://nextcloud.homelab.local # Exemplo de URL do Twingate
        description: Arquivos, Calend√°rio e Contatos
        icon: mdi-nextcloud
        container: nextcloud

- "M√≠dia e Monitoramento":
    - Jellyfin:
        href: http://jellyfin.homelab.local # Exemplo de URL do Twingate
        description: Servidor de M√≠dia
        icon: mdi-jellyfin
        container: jellyfin

    - Uptime Kuma:
        href: http://kuma.homelab.local # Exemplo de URL do Twingate
        description: Monitor de Servi√ßos
        icon: mdi-chart-donut
        container: uptime-kuma
EOF

    success "Arquivo services.yaml gerado."
    warning "Voc√™ precisar√° editar as URLs ('href') neste arquivo com os endere√ßos que voc√™ configurar no Twingate."
    echo
}

# --- Inicializa√ß√£o dos Servi√ßos ---
start_services() {
    info "Iniciando todos os cont√™ineres em segundo plano..."
    docker-compose up -d

    if [ $? -eq 0 ]; then
        success "Todos os servi√ßos foram iniciados!"
    else
        error "Ocorreu um erro ao tentar iniciar os servi√ßos com docker-compose."
        info "Tente rodar 'docker-compose logs -f' para ver os detalhes do erro."
    fi
    echo
}

# --- Resumo Final e Pr√≥ximos Passos ---
final_summary() {
    echo "================================================="
    echo "          üöÄ SETUP DO HOMELAB CONCLU√çDO üöÄ       "
    echo "================================================="
    echo
    info "Seus servi√ßos est√£o rodando! Agora, siga estes passos manuais:"
    echo "1.  Painel do Twingate:"
    echo "    - Verifique se o seu 'Connector' aparece como conectado."
    echo "    - Crie os 'Resources' para Nextcloud, Jellyfin e Uptime Kuma como descrito na documenta√ß√£o."
    echo
    echo "2.  Configura√ß√£o dos Servi√ßos:"
    echo "    - Para configurar o Nextcloud pela primeira vez, acesse-o via Twingate."
    echo "    - Fa√ßa o mesmo para Jellyfin e Uptime Kuma para criar seus usu√°rios e senhas."
    echo
    echo "3.  Homepage Dashboard:"
    echo "    - Acesse seu Homepage localmente em http://IP_DO_SEU_SERVIDOR:3001."
    echo "    - Edite o arquivo 'homelab/homepage/config/services.yaml' com as URLs corretas do Twingate que voc√™ criou."
    echo
    warning "Para verificar os logs de algum servi√ßo, use: 'docker-compose logs -f <nome_do_servico>'"
    echo
}

# --- Ponto de Entrada do Script ---
main
